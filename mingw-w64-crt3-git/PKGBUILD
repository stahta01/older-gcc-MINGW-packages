# Maintainer:  Tim Stahlhut <stahta01@gmail.com>
# Contributor: Alexey Pavlov <alexpux@gmail.com>

### Major build options
_include_sub_folder=/${MINGW_CHOST}
_build_using_external_compiler=yes   # Use no for production

# =========================================== #
if [[ $MSYSTEM != MINGW64 && "$_build_using_external_compiler" == "yes" ]]; then
  _build_using_external_compiler=no
  # This package does not work under UCRT64; because default with-default-msvcrt is missing.
  warning "Currently MINGW32 and UCRT64 cannot use _build_using_external_compiler=yes"
fi
# =========================================== #

_realname=crt
pkgbase=mingw-w64-${_realname}3-git
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}-git"
replaces=("${MINGW_PACKAGE_PREFIX}-${_realname}-svn")
pkgver=3.3.0.r61.g8c7e00886
_gcc_version=$(gcc -dumpversion)
echo "_gcc_version := $_gcc_version"
if [[ ${_gcc_version:0:1} == "6" ]]; then
  pkgrel=1
elif [[ ${_gcc_version:0:1} == "5" ]]; then
  pkgrel=2
elif [[ ${_gcc_version:0:3} == "4.9" ]]; then
  pkgrel=3
elif [[ ${_gcc_version:0:3} == "4.8" ]]; then
  pkgrel=4
elif [[ ${_gcc_version:0:3} == "4.7" ]]; then
  pkgrel=5
else
  pkgrel=0
fi
_commit='8c7e00886f69c448270376601fe1c016392e26f9' # 3.3.0.r61.g8c7e00886
pkgdesc='MinGW-w64 CRT for Windows'
arch=('any')
url='https://mingw-w64.sourceforge.io/'
license=('custom')
groups=("${MINGW_PACKAGE_PREFIX}-toolchain")
depends=("${MINGW_PACKAGE_PREFIX}-headers-git")
makedepends=("git"
             $( [ "$_build_using_external_compiler" != "yes" ] && echo "${MINGW_PACKAGE_PREFIX}-${_realname}")
             "${MINGW_PACKAGE_PREFIX}-binutils")
provides=("${MINGW_PACKAGE_PREFIX}-${_realname}")
conflicts=("${MINGW_PACKAGE_PREFIX}-${_realname}")
options=('!strip' 'staticlibs' '!buildflags' '!emptydirs')
source=("mingw-w64"::"git+https://git.code.sf.net/p/mingw-w64/mingw-w64#commit=$_commit"
        '001-headers-Use-FORCEINLINE-instead-of-__CRT_INLINE.patch')
sha256sums=('SKIP'
            '77a3eca4779c87227a4713a5f1457c08385a3e3c4ca3e9dfddfbd5e58826ec1e')

pkgver() {
  cd "${srcdir}/mingw-w64"
  git describe --long ${_commit} | sed 's/\([^-]*-g\)/r\1/;s/-/./g;s/^v//g'
}

prepare() {
  cd ${srcdir}/mingw-w64

  git am --committer-date-is-author-date "${srcdir}/001-headers-Use-FORCEINLINE-instead-of-__CRT_INLINE.patch"
}

build() {
  msg "Building ${MINGW_CHOST} CRT"
  case "$CARCH" in
    i686)
      _crt_configure_args="--disable-lib64 --enable-lib32"
    ;;
    x86_64)
      _crt_configure_args="--disable-lib32 --enable-lib64"
    ;;
  esac

  if [[ "$_build_using_external_compiler" == "yes" ]]; then
    local _GNAT_year=2018
    local _compiler_toolchain_host=x86_64-pc-mingw32
    local _compiler_toolchain_prefix=/h/GNAT/${_GNAT_year}
    # Try to use normal binutils commands and static GCC libs
    export CC="${_compiler_toolchain_prefix}/bin/${_compiler_toolchain_host}-gcc -static-libgcc -static"
    export CXX="${_compiler_toolchain_prefix}/bin/${_compiler_toolchain_host}-g++ -static-libstdc++ -static"
    export CXXCPP="${CXX} -E"
  fi
  echo "PATH := $PATH"

  [[ -d ${srcdir}/crt-${MSYSTEM} ]] && rm -rf ${srcdir}/crt-${MSYSTEM}
  mkdir -p ${srcdir}/crt-${MSYSTEM} && cd ${srcdir}/crt-${MSYSTEM}

  echo ""
  echo "CC [gcc] := ${CC-gcc}"
  ${CC-gcc} --version | head -1
  echo ""

  ${srcdir}/mingw-w64/mingw-w64-crt/configure \
    --prefix=${MINGW_PREFIX}${_include_sub_folder} \
    --build=${MINGW_CHOST} \
    --host=${MINGW_CHOST} \
    --target=${MINGW_CHOST} \
    --with-sysroot=${MINGW_PREFIX}${_include_sub_folder} \
    --enable-wildcard \
    ${_crt_configure_args}
  make
}

package() {
  msg "Installing ${MSYSTEM} crt"
  cd ${srcdir}/crt-${MSYSTEM}
  make DESTDIR=${pkgdir} install-strip
}
